---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ollama-pv
  namespace: production
spec:
  capacity:
    storage: 8Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  local:
    path: /home/imranr/k8s/state/ollama
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: main-storage
              operator: In
              values:
                - "true"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ollama-pvc
  namespace: production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
  volumeName: ollama-pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ollama
  namespace: production
  labels:
    app: ollama
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ollama
  template:
    metadata:
      labels:
        app: ollama
    spec:
      securityContext:
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: ollama
          image: ollama/ollama:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 11434
          volumeMounts:
            - name: state
              mountPath: /root/.ollama
              subPath: ollama
        - name: ollama-webui
          image: ghcr.io/open-webui/open-webui:main
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
          - name: OLLAMA_BASE_URL
            value: "http://127.0.0.1:11434"
          - name: WEBUI_AUTH_TRUSTED_EMAIL_HEADER
            value: "Remote-Email"
          - name: WEBUI_AUTH_TRUSTED_NAME_HEADER
            value: "Remote-Name"
          volumeMounts:
            - name: state
              mountPath: /app/backend/data
              subPath: webui
      volumes:
        - name: state
          persistentVolumeClaim:
            claimName: ollama-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: ollama
  namespace: production
  labels:
    app: ollama
spec:
  selector:
    app: ollama
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: ollama
  namespace: production
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`gpt.staging.imranr.dev`)
      kind: Rule
      middlewares:
        - name: forwardauth-geoblock
          namespace: production
      services:
        - name: ollama
          port: 8080
  tls:
    secretName: imranr-dev-tls
