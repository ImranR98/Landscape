config:
  config.yaml.local: |
    db_config:
      type:     postgresql
      user:     ${DB_USERNAME}
      password: ${DB_PASSWORD}
      db_name:  ${DB_NAME}
      host:     crowdsec-db.production.svc.cluster.local
      port:     5432
      sslmode:  disable
  profiles.yaml: |
    name: default_ip_remediation
    debug: true
    filters:
        - Alert.Remediation == true && Alert.GetScope() == "Ip"
    decisions:
        - type: ban
          duration: 672h
    notifications:
        - http_default # Set the required http parameters in /etc/crowdsec/notifications/http.yaml before enabling this.
    on_success: break
  notifications-http.yaml: |
    type: http          # Don't change
    name: http_default  # Must match the registered plugin in the profile

    log_level: info # One of "trace", "debug", "info", "warn", "error", "off"

    group_wait: 30s       # Time to wait collecting alerts before relaying a message to this plugin, eg "30s"
    group_threshold: 10   # Amount of alerts that triggers a message before <group_wait> has expired, eg "10"
    # max_retry:          # Number of attempts to relay messages to plugins in case of error
    # timeout:            # Time to wait for response from the plugin before considering the attempt a failure, eg "10s"

    format: |
      {{.|toJson}}
    url: https://ntfy.sh/jebhgusbdgunweu # PROD TODO: Replace this with the prod version
    method: POST

container_runtime: containerd

agent:
  acquisition:
    - namespace: production
      podName: traefik-*
      program: traefik
  env:
    - name: COLLECTIONS
      value: "crowdsecurity/traefik"
    - name: LEVEL_DEBUG
      value: "false"

lapi:
  replicas: 1 # Multiple replicas should work after chart 0.11.2
  dashboard:
    enabled: true
  env:
    - name: BOUNCER_KEY_traefik
      value: "96e26fdf5a9ae8775280c96a7d2241ab389f68c0d44b1022ffa300d5dd8bc099" # PROD TODO: Replace this with a different random value
    - name: DB_NAME
      valueFrom:
        secretKeyRef:
          name: crowdsec-db-secret
          key: POSTGRES_DB
    - name: DB_USERNAME
      valueFrom:
        secretKeyRef:
          name: crowdsec-db-secret
          key: POSTGRES_USER
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: crowdsec-db-secret
          key: POSTGRES_PASSWORD
  persistentVolume:
    config:
      enabled: false
    data:
      enabled: false
  secrets:
    csLapiSecret: "eb7528fb92305045dd5a3b4c1dbd64d16040c792e3b2607f9ab6efd2d5e2adb8" # PROD TODO: Replace this with a different random value
