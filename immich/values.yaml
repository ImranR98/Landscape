env:
  REDIS_HOSTNAME: '{{ printf "%s-redis-master" .Release.Name }}'
  DB_HOSTNAME: "{{ .Release.Name }}-postgresql"
  DB_USERNAME: "{{ .Values.postgresql.global.postgresql.auth.username }}"
  DB_DATABASE_NAME: "{{ .Values.postgresql.global.postgresql.auth.database }}"
  DB_PASSWORD: "{{ .Values.postgresql.global.postgresql.auth.password }}"
  IMMICH_MACHINE_LEARNING_URL: '{{ printf "http://%s-machine-learning:3003" .Release.Name }}'

image:
  tag: release

podSecurityContext:
  fsGroup: $MY_UID
securityContext:
  runAsUser: $MY_UID
  runAsGroup: $MY_UID
  allowPrivilegeEscalation: false
  seLinuxOptions:
    type: spc_t # SELinux may cause issues with file watching/reading for external libraries

immich:
  metrics:
    enabled: false
  persistence:
    library:
      existingClaim: immich-server-pvc
  configuration: {}
  #   oauth:
  #     autoLaunch: true
  #     autoRegister: true
  #     buttonText: "Login with OAuth"
  #     clientId: "immich"
  #     clientSecret: "$IMMICH_OAUTH_CLIENT_SECRET"
  #     defaultStorageQuota: 0
  #     enabled: true
  #     issuerUrl: "https://auth.$SERVICES_DOMAIN/.well-known/openid-configuration"
  #   library:
  #     watch:
  #       enabled: true

postgresql:
  enabled: true
  image:
    repository: tensorchord/pgvecto-rs
    tag: pg14-v0.2.0
  global:
    postgresql:
      auth:
        username: immich
        database: immich
        password: $IMMICH_DB_PASSWORD
  primary:
    initdb:
      scripts:
        create-extensions.sql: |
          CREATE EXTENSION cube;
          CREATE EXTENSION earthdistance;
          CREATE EXTENSION vectors;
    persistence:
      enabled: true
      existingClaim: immich-main-pvc
      subPath: "postgres"
    podSecurityContext:
      fsGroup: $MY_UID
    containerSecurityContext:
      runAsUser: $MY_UID
      runAsGroup: $MY_UID

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      existingClaim: immich-main-pvc
      subPath: "redis"
    podSecurityContext:
      fsGroup: $MY_UID
    containerSecurityContext:
      runAsUser: $MY_UID
      runAsGroup: $MY_UID

server:
  enabled: true
  env:
      DB_PASSWORD: $IMMICH_DB_PASSWORD
  image:
    repository: ghcr.io/immich-app/immich-server
    pullPolicy: Always
  ingress:
    main:
      enabled: false
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
      hosts:
        - host: immich.local
          paths:
            - path: "/"
      tls: []
  persistence:
    external:
      enabled: true
      existingClaim: main-media-pvc
      readOnly: false

machine-learning:
  enabled: true
  image:
    repository: ghcr.io/immich-app/immich-machine-learning
    pullPolicy: Always
  env:
    TRANSFORMERS_CACHE: /cache
  persistence:
    cache:
      enabled: true
      size: 10Gi
      type: emptyDir
      accessMode: ReadWriteMany