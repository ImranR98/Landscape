env:
  REDIS_HOSTNAME: '{{ printf "%s-redis-master" .Release.Name }}'
  DB_HOSTNAME: "{{ .Release.Name }}-postgresql"
  DB_USERNAME: "{{ .Values.postgresql.global.postgresql.auth.username }}"
  DB_DATABASE_NAME: "{{ .Values.postgresql.global.postgresql.auth.database }}"
  DB_PASSWORD: "{{ .Values.postgresql.global.postgresql.auth.password }}"
  IMMICH_MACHINE_LEARNING_URL: '{{ printf "http://%s-machine-learning:3003" .Release.Name }}'

image:
  tag: release

podSecurityContext:
  fsGroup: 1000
securityContext:
  runAsUser: 1000
  runAsGroup: 1000

immich:
  metrics:
    enabled: false
  persistence:
    library:
      existingClaim: immich-pvc
  configuration:
    oauth:
      autoLaunch: true
      autoRegister: true
      buttonText: "Login with OAuth"
      clientId: "immich"
      clientSecret: "d63017b141d876f34698cae2ca51e95c6063a7e46095e38d2e8d7cd958da1dadad3f2e86"
      defaultStorageQuota: 0
      enabled: true
      issuerUrl: "https://auth.staging.imranr.dev/.well-known/openid-configuration"
    library:
      watch:
        enabled: true

postgresql:
  enabled: true
  image:
    repository: tensorchord/pgvecto-rs
    tag: pg14-v0.2.0
  global:
    postgresql:
      auth:
        username: immich
        database: immich
        password: fd2dfdb69ac906e3e8fe4b7ab74cb3f265cc38a794a23f72843b997a2677a727 # PROD TODO: Replace this with a different random value (and in the postgres section below)
  primary:
    initdb:
      scripts:
        create-extensions.sql: |
          CREATE EXTENSION cube;
          CREATE EXTENSION earthdistance;
          CREATE EXTENSION vectors;
    persistence:
      enabled: true
      existingClaim: immich-pvc
      subPath: "postgres"
    podSecurityContext:
      fsGroup: 1000
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      existingClaim: immich-pvc
      subPath: "redis"
    podSecurityContext:
      fsGroup: 1000
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000

server:
  enabled: true
  env:
      DB_PASSWORD: fd2dfdb69ac906e3e8fe4b7ab74cb3f265cc38a794a23f72843b997a2677a727
  image:
    repository: ghcr.io/immich-app/immich-server
    pullPolicy: Always
  ingress:
    main:
      enabled: false
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
      hosts:
        - host: immich.local
          paths:
            - path: "/"
      tls: []
  persistence:
    external:
      enabled: true
      existingClaim: main-media-pvc
      readOnly: false

machine-learning:
  enabled: true
  image:
    repository: ghcr.io/immich-app/immich-machine-learning
    pullPolicy: Always
  env:
    TRANSFORMERS_CACHE: /cache
  persistence:
    cache:
      enabled: true
      size: 10Gi
      type: emptyDir
      accessMode: ReadWriteMany
