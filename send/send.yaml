---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: send-pv
  namespace: production
spec:
  capacity:
    storage: 8Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  local:
    path: /home/imranr/k8s/state/send
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: main-storage
              operator: In
              values:
                - "true"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: send-pvc
  namespace: production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
  volumeName: send-pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: send
  namespace: production
  labels:
    app: send
spec:
  replicas: 1
  selector:
    matchLabels:
      app: send
  template:
    metadata:
      labels:
        app: send
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: send
          image: registry.gitlab.com/timvisee/send:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: state
              mountPath: /uploads
              subPath: uploads
          env:
            - name: VIRTUAL_HOST
              value: send.staging.imranr.dev
            - name: VIRTUAL_PORT
              value: "3000"
            - name: DHPARAM_GENERATION
              value: "false"
            - name: NODE_ENV
              value: production
            - name: BASE_URL
              value: https://send.staging.imranr.dev
            - name: PORT
              value: "3000"
            - name: REDIS_HOST
              value: send-db.production.svc.cluster.local
            - name: FILE_DIR
              value: /uploads
      volumes:
        - name: state
          persistentVolumeClaim:
            claimName: send-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: send
  namespace: production
  labels:
    app: send
spec:
  selector:
    app: send
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: ClusterIP
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: send
  namespace: production
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`send.staging.imranr.dev`)
      kind: Rule      
      services:
        - name: send
          port: 3000
  tls:
    secretName: imranr-dev-tls
