pod:
  kind: DaemonSet
  extraVolumeMounts:
    - name: users-database
      mountPath: "/config/users"
      readOnly: true
  extraVolumes:
    - name: users-database
      secret:
        secretName: users-database
        items:
          - key: users-database.yaml
            path: users-database.yaml
configMap:
  authentication_backend:
    ldap:
      enabled: false
    file:
      enabled: true
      password:
        algorithm: sha512
        iterations: 100000
      path: /config/users/users-database.yaml
    password_reset:
      disable: true
  session:
    redis:
      enabled: true
      deploy: true
      enabledSecret: false
      host: "authelia-redis-master.production.svc.cluster.local"
      port: 6379
      username: ""
      password:
        value: "d0bacbcc807541cb08a6c4b51b7cba366046dfe658c354376f752d3e55155ad3" # PROD TODO: Replace this with a different random value (and copy to redis section below)
      database_index: 0
      maximum_active_connections: 8
      minimum_idle_connections: 0
      tls:
        enabled: false
        server_name: ""
        skip_verify: false
      high_availability:
        enabled: false # TODO: Look into this
        enabledSecret: false
        sentinel_name: "mysentinel"
        username: ""
        password:
          value: ""
        nodes: []
    cookies:
      - subdomain: "auth.staging"
        domain: "imranr.dev"
        path: ""
        default_redirection_url: ""
  storage:
    encryption_key:
      value: "bbf112811c99c821a7ca4120491bc2eb63579eac7dfcc14dfa4e53ff5a911ddc"
    local:
      enabled: false
    postgres:
      enabled: true
      deploy: true
      address: "tcp://authelia-postgresql.production.svc.cluster.local:5432"
      timeout: "5 seconds"
      password:
        value: "fa0a28c575404f023570f47ae050c671b5a238c0433dd6391d3c37f523603dd4" # PROD TODO: Replace this with a different random value (and copy to postgres section below)
      tls:
        enabled: false
  notifier:
    filesystem:
      enabled: true
    smtp:
      enabled: false
  identity_providers:
    oidc:
      enabled: false
  log:
    level: debug
  totp:
    issuer: imranr.dev
  access_control:
    rules:
      - domain: tv.staging.imranr.dev
        policy: bypass
      - domain: pixelntfy.staging.imranr.dev
        policy: bypass
      - domain: isbn.staging.imranr.dev
        policy: bypass
      - domain: nextcloud.staging.imranr.dev
        policy: bypass
      - domain: ha.staging.imranr.dev
        policy: bypass
      - domain: ntfy.staging.imranr.dev
        policy: bypass
      - domain: files.staging.imranr.dev
        resources:
        - '^/share([/?].*)?$'
        - '^/static([/?].*)?$'
        - '^/api/public([/?].*)?$'
        policy: bypass
      - domain: send.staging.imranr.dev
        resources:
        - '^/download/[^/]+/?$'
        - '^/api/download/[^/]+/?$'
        - '^/api/download/blob/[^/]+/?$'
        - '^/api/info/[^/]+/?$'
        - '^/api/metadata/[^/]+/?$'
        - '^/[^/]+\.js$'
        - '^/[^/]+\.svg$'
        - '^/[^/]+\.css$'
        - '^/[^/]+\.woff2$'
        - '^/[^/]+\.png$'
        - '^/__heartbeat__/?$'
        policy: bypass
      - domain: music.staging.imranr.dev
        policy: bypass
      - domain: immich.staging.imranr.dev
        policy: bypass
      - domain: auth.staging.imranr.dev
        policy: bypass
      - domain: plausible.staging.imranr.dev
        policy: bypass
      - domain: '*.imranr.dev'
        policy: two_factor
        subject:
          - 'group:admins'
  regulation:
    max_retries: 3
    find_time: 120
    ban_time: 300

postgresql:
  auth:
    postgresPassword: authelia
    username: authelia
    password: "fa0a28c575404f023570f47ae050c671b5a238c0433dd6391d3c37f523603dd4"
    database: authelia
  primary:
    persistence:
      enabled: true
      existingClaim: authelia-nfs-pvc
      subPath: "storage"
    podSecurityContext:
      fsGroup: 1000
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000

redis:
  architecture: standalone
  auth:
    enabled: false
    sentinel: true
    password: "d0bacbcc807541cb08a6c4b51b7cba366046dfe658c354376f752d3e55155ad3"
    usePasswordFiles: false
  master:
    resources: {}
    priorityClassName: ""
    persistence:
      enabled: true
      existingClaim: authelia-nfs-pvc
      subPath: "session"
    podSecurityContext:
      fsGroup: 1000
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
  replica:
    replicaCount: 1
    resources: {}
    priorityClassName: ""
    persistence:
      enabled: true
      existingClaim: authelia-nfs-pvc
      subPath: "session"
