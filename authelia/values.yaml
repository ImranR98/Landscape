pod:
  kind: StatefulSet
  extraVolumeMounts:
    - name: users-database
      mountPath: "/config/users"
      readOnly: true
  extraVolumes:
    - name: users-database
      secret:
        secretName: authelia-users
        items:
          - key: users-database.yaml
            path: users-database.yaml
configMap:
  authentication_backend:
    ldap:
      enabled: false
    file:
      enabled: true
      password:
        algorithm: sha512
        iterations: 100000
      path: /config/users/users-database.yaml
    password_reset:
      disable: true
  session: # TODO: Figure out how TF to use proper secrets Postgres and Redis auth
    redis:
      enabled: true
      deploy: true
      enabledSecret: false
      host: 'authelia-redis-master.production.svc.cluster.local'
      port: 6379
      username: ''
      password:
        disabled: false
        secret_name: ~
        value: ''
        path: 'session.redis.password.txt'
      database_index: 0
      maximum_active_connections: 8
      minimum_idle_connections: 0
      tls:
        enabled: false
        server_name: ''
        skip_verify: false
      high_availability:
        enabled: false
        enabledSecret: false
        sentinel_name: 'mysentinel'
        username: ''
        password:
          disabled: false
          secret_name: ~
          value: ''
          path: 'session.redis.sentinel.password.txt'
        nodes: []
    cookies:
      - subdomain: "auth.staging"
        domain: "imranr.dev"
        path: ""
        default_redirection_url: ""
  storage:
    local:
      enabled: false
    postgres:
      enabled: true
      deploy: true
      address: "tcp://authelia-postgresql.production.svc.cluster.local:5432"
      timeout: "5 seconds"
      password:
        disabled: false
        secret_name: ~
        value: "authelia"
        path: "storage.postgres.password.txt"
      tls:
        enabled: false
  notifier:
    filesystem:
      enabled: true
    smtp:
      enabled: false
  identity_providers:
    oidc:
      enabled: false
  log:
    level: debug
  totp:
    issuer: imranr.dev
  access_control:
    rules:
      - domain: "*.imranr.dev"
        policy: one_factor
        subject:
          - "group:admins"
  regulation:
    max_retries: 3
    find_time: 120
    ban_time: 300

postgresql:
  auth:
    postgresPassword: authelia
    username: authelia
    password: authelia
    database: authelia
  primary:
    persistence:
      enabled: true
      existingClaim: state-nfs-pvc
      subPath: 'authelia/storage'
    podSecurityContext:
      fsGroup: 1000
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000

redis:
  architecture: standalone
  auth:
    enabled: false
    sentinel: true
    password: "redis"
    existingSecret: ""
    existingSecretPasswordKey: ""
    usePasswordFiles: false
  master:
    resources: {}
    priorityClassName: ""
    persistence:
      enabled: true
      existingClaim: state-nfs-pvc
      subPath: 'authelia/session'
    podSecurityContext:
      fsGroup: 1000
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
  replica:
    replicaCount: 1
    resources: {}
    priorityClassName: ""
    persistence:
      enabled: true
      existingClaim: state-nfs-pvc
      subPath: 'authelia/session'