# NOTE: Any ending (strictly ending, not just containing) with the 'IGNORE INITIALLY' comment will be ignored by install.sh (but applied with update.sh) 
#       The main use case for this is to avoid applying 'bypass' policies to some sites that
#       should not be protected by Authelia once fully set up, but should be protected before
#       some manual step is taken (usually manual creation of an admin account).

image:
  pullPolicy: Always

pod:
  kind: DaemonSet
  extraVolumeMounts:
    - name: users-database
      mountPath: "/config/users"
      readOnly: true
  extraVolumes:
    - name: users-database
      secret:
        secretName: users-database
        items:
          - key: users-database.yaml
            path: users-database.yaml
configMap:
  authentication_backend:
    ldap:
      enabled: false
    file:
      enabled: true
      password:
        algorithm: sha512
        iterations: 100000
      path: /config/users/users-database.yaml
    password_reset:
      disable: true
  session:
    redis:
      enabled: true
      deploy: true
      enabledSecret: false
      host: "authelia-redis-master.production.svc.cluster.local"
      port: 6379
      username: ""
      password:
        value: "d0bacbcc807541cb08a6c4b51b7cba366046dfe658c354376f752d3e55155ad3" # PROD TODO: Replace this with a different random value (and copy to redis section below)
      database_index: 0
      maximum_active_connections: 8
      minimum_idle_connections: 0
      tls:
        enabled: false
        server_name: ""
        skip_verify: false
      high_availability:
        enabled: false
        enabledSecret: false
        sentinel_name: "mysentinel"
        username: ""
        password:
          value: ""
        nodes: []
    cookies:
      - subdomain: "auth.staging"
        domain: "imranr.dev"
        path: ""
        default_redirection_url: ""
  storage:
    encryption_key:
      value: "bbf112811c99c821a7ca4120491bc2eb63579eac7dfcc14dfa4e53ff5a911ddc"
    local:
      enabled: false
    postgres:
      enabled: true
      deploy: true
      address: "tcp://authelia-postgresql.production.svc.cluster.local:5432"
      timeout: "5 seconds"
      password:
        value: "fa0a28c575404f023570f47ae050c671b5a238c0433dd6391d3c37f523603dd4" # PROD TODO: Replace this with a different random value (and copy to postgres section below)
      tls:
        enabled: false
  notifier:
    filesystem:
      enabled: true
    smtp:
      enabled: false
  identity_providers:
    oidc:
      enabled: true
      ## See: https://www.authelia.com/c/oidc
      hmac_secret:
        value: '483a0571ef6cbb99336571b7b053cbfd6f88f5c36d2e0c02d8db0b7d7b09285a' # PROD TODO: Replace this with the prod version
      jwks:
        - key:
            value: | # PROD TODO: Replace this with the prod version
              -----BEGIN PRIVATE KEY-----
              MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC7myWf4hzXnl1Z
              VXnxIPAvS3w632Lpc7zqwlUZb/rNLm6ALSPKCSEXjcAMS9b1amshTenEZ59e60RG
              wnBfRnYhmHRfyEC57ZdOfCOqEW64u7mXSHC1nIldREJV6khT3MlMiBLdp5BKRtB0
              kZjiX/blx4zHuHc/ddFR5te1/CB6stOk5Wbcm3jg9kAYpONFZHB8UijLTXJGQQhI
              rRBA8ccW3olMvxgxkXIH8jDsIljxP/YjgG5EHIcMe2HrF6nCl+GbbOxJWjRxpNWa
              cW0PM3EccibCXJxH1Ewh5IFAotW+/Pe1UNZvGvSgg32PGrOSWQAlFrIbrH7G2ZCM
              LUlYKBgXAgMBAAECggEAYdUGSdogMFDlXTC15ojGt+MlZY4YhqVUXxf4SMucfmM4
              PJ9Nio44M5A4FjF2Z4SXWUbIISPoeBc4A65h601TTTGzfj9vgYXk4YjbEFUG6E78
              +WdNX2fCOmDeNu91yEXas45CSFSZaiKDkkZa87IXjrwBLiWEChPmlE9NLhnM1i6F
              VoS1UqpYgRgmOMv4GbGCqfp94sYvn31esAQrP9viNupPfN+bZjq0XCilWi2HdGGI
              roJr8voHmhGuRriKktfNAwpdfxiJFU8rixT+npP3queNJvWPLlW8x6s3l0Rcx+eU
              yZIB34tuZ/uucXBiRDkDxAq5WvdnkqalGDdECe7UAQKBgQDzny8xmEtCYV4Paa8u
              /FPnOKhZFd/u3Gv3lDJUa3sRmZcXQ8FjoCSf2Vlsva3AISZkBzr3PaKK4xqWnRhR
              QtUM3X4fxlWB9O/94bT8bsE6nzgnHTdsOji7zoi+liSbRAgTWjDIRaTe6Xl56iFl
              nmpgoC0H9ypW4SJGIw+4C7aSvQKBgQDFI1v99e8M8c6MHz409kvE+8ZG3DqPHb/8
              Ou4QqFi7GfMF4F5cy0RaKRsm6rfwxMRCaORthEZAFgM/ncQ/9t/V+qQ/f0H/zoCU
              42YTPJdwgU6sHuSK3tRKHOL0/AWCTGwMQefhNN4CohwQQBGbOMLwFJ/bPRJvu2wW
              KhoAB/zNYwKBgQC6Fc5LmKNrycm6BiTMw+omxI06ts28utsxWh5zg0GW+PWCzLtM
              KMew3alDuUKdbfTQFQHCVm7wnXXys34em+j2kbzD8o/f20LxbtT6uHKaH4IZxmRO
              I86wDZs/0JmXi4iLl6mJYEEGD9o8+EyYPT/OHKso2W+auw6d+iwIjdHgFQKBgGw3
              pOAciUWJ1+CDphpcuetAau+rJVo68pD7qIPsZgkPjaDEMgiubK8xsX4Di0XYPgRW
              oE6eNhIoA1CAwqJ6WxWTqWZR7WEHcv5IdlhJArj3wsAplTvGZrLoeI4TatLEMOvp
              oei2pMi9RLqG8SNMXXZ9W+N1+xDqycLBCdTKjbQRAoGBANi6M+NaK+8aZNwI6e7k
              LtASOuE/AXzTf7Oellmczu8HiYgPRlvkYVy9lby+C1ASjF+dz4xG3mMb5hOKpODH
              FIDyj3i+V0NyxtXkHEPMWBoc8F5ot+49mxooc8SQleXxNKL/R925KBbIqnSUimrd
              1yQZil3faVYl//7bQQc5pOuX
              -----END PRIVATE KEY-----
      clients:
      - client_id: 'immich'
        client_name: 'immich'
        client_secret: '$pbkdf2-sha512$310000$7CscErycuFXzvu74Kdzelw$RTpLh8NsqJ9eTVH5MFBo4EbsoIMmLLFWdAEwS43eX.pluhH32xsOH1hmqeO1uNSb43OyZ4gNhTi/39sAUAPwVg' # PROD TODO: Replace this
        public: false
        authorization_policy: 'two_factor'
        redirect_uris:
          - 'https://immich.staging.imranr.dev/auth/login'
          - 'https://immich.staging.imranr.dev/user-settings'
          - 'app.immich:/'
        scopes:
          - 'openid'
          - 'profile'
          - 'email'
        userinfo_signed_response_alg: 'none'
  log:
    level: debug
  totp:
    issuer: imranr.dev
  access_control:
    rules:
      - domain: tv.staging.imranr.dev # IGNORE INITIALLY
        policy: bypass # IGNORE INITIALLY
      - domain: pixelntfy.staging.imranr.dev
        policy: bypass
      - domain: isbn.staging.imranr.dev
        policy: bypass
      - domain: nextcloud.staging.imranr.dev # IGNORE INITIALLY
        policy: bypass # IGNORE INITIALLY
      - domain: ha.staging.imranr.dev # IGNORE INITIALLY
        policy: bypass # IGNORE INITIALLY
      - domain: ntfy.staging.imranr.dev
        policy: bypass
      - domain: files.staging.imranr.dev
        resources:
        - '^/share([/?].*)?$'
        - '^/static([/?].*)?$'
        - '^/api/public([/?].*)?$'
        policy: bypass
      - domain: send.staging.imranr.dev
        resources:
        - '^/download/[^/]+/?$'
        - '^/api/download/[^/]+/?$'
        - '^/api/download/blob/[^/]+/?$'
        - '^/api/info/[^/]+/?$'
        - '^/api/metadata/[^/]+/?$'
        - '^/[^/]+\.js$'
        - '^/[^/]+\.svg$'
        - '^/[^/]+\.css$'
        - '^/[^/]+\.woff2$'
        - '^/[^/]+\.png$'
        - '^/__heartbeat__/?$'
        policy: bypass
      - domain: music.staging.imranr.dev # IGNORE INITIALLY
        policy: bypass # IGNORE INITIALLY
      - domain: immich.staging.imranr.dev # IGNORE INITIALLY
        policy: bypass # IGNORE INITIALLY
      - domain: auth.staging.imranr.dev
        policy: bypass
      - domain: plausible.staging.imranr.dev # IGNORE INITIALLY
        policy: bypass # IGNORE INITIALLY
      - domain: '*.imranr.dev'
        policy: two_factor
        subject:
          - 'group:admins'
  regulation:
    max_retries: 3
    find_time: 120
    ban_time: 300
postgresql:
  auth:
    postgresPassword: authelia
    username: authelia
    password: "fa0a28c575404f023570f47ae050c671b5a238c0433dd6391d3c37f523603dd4"
    database: authelia
  primary:
    persistence:
      enabled: true
      existingClaim: authelia-pvc
      subPath: "storage"
    podSecurityContext:
      fsGroup: 1000
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000

redis:
  architecture: standalone
  auth:
    enabled: false
    sentinel: true
    password: "d0bacbcc807541cb08a6c4b51b7cba366046dfe658c354376f752d3e55155ad3"
    usePasswordFiles: false
  master:
    resources: {}
    priorityClassName: ""
    persistence:
      enabled: true
      existingClaim: authelia-pvc
      subPath: "session"
    podSecurityContext:
      fsGroup: 1000
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
  replica:
    replicaCount: 1
    resources: {}
    priorityClassName: ""
    persistence:
      enabled: true
      existingClaim: authelia-pvc
      subPath: "session"
